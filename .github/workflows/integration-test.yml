name: Integration tests

# TODO(ver) the integration test cases should not be enumerated in the workflow,
# but invoked via a general test runner.

on: [pull_request]

permissions:
  contents: read

jobs:
  docker-build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    container: ghcr.io/linkerd/dev:v34-action
    steps:
    - run: docker buildx create --use
    - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
    - uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7
      with:
        path: target/buildx
        key: buildx-${{ runner.os }}-${{ github.sha }}
        restore-keys: buildx-${{ runner.os }}-
    - run: just controller-build-image
        --output type=docker
        --tag 'ghcr.io/linkerd/failover:git-${{ github.sha }}'
        --cache-from type=local,src=target/buildx
        --cache-to type=local,dest=target/buildx
    - run: just-dev prune-action-cache target/buildx
    - run: mkdir -p /tmp/images
    - run: docker save 'ghcr.io/linkerd/failover:git-${{ github.sha }}' --output /tmp/images/controller.tar
    - uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb
      with:
        name: images
        path: /tmp/images

  install-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [docker-build]
    steps:
    - uses: azure/setup-helm@f382f75448129b3be48f8121b9857be18d815a82
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - uses: AbsaOSS/k3d-action@b176c2a6dcae72e3e64e3e4d61751904ec314002
      with:
        cluster-name: default

    - uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7
      with:
        name: images
        path: /tmp/images
    - name: Run k3d image import
      run: |
        # This can be flakey so retry it a few times.
        for _ in {0..2} ; do
          if k3d image import --mode=direct --cluster=default /tmp/images/controller.tar ; then
            exit 0
          fi
          sleep 5
        done
        exit 1

    - name: Install linkerd
      run: |
        curl -sL https://run.linkerd.io/install-edge | sh
        export PATH=$PATH:~/.linkerd2/bin
        linkerd install --crds | kubectl apply -f -
        linkerd install | kubectl apply -f -
        linkerd check
    - name: Install linkerd-smi
      run: |
        helm repo add linkerd-smi https://linkerd.github.io/linkerd-smi
        helm repo up
        helm install linkerd-smi -n linkerd-smi --create-namespace --wait linkerd-smi/linkerd-smi
    - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
    - name: Install current linkerd-failover
      run: |
        helm install linkerd-failover -n linkerd-failover --create-namespace --wait \
          --set image.registry=ghcr.io/linkerd \
          --set image.tag=git-${{ github.sha }} \
          charts/linkerd-failover

    - name: Test routing to primary
      uses: ./.github/actions/failover-test
      with:
        westReplicas: 1
        westShouldReceiveTraffic: true
        centralReplicas: 1
        centralShouldReceiveTraffic: false
        eastReplicas: 1
        eastShouldReceiveTraffic: false
    - name: Test failover to secondaries
      uses: ./.github/actions/failover-test
      with:
        westReplicas: 0
        westShouldReceiveTraffic: false
        centralReplicas: 1
        centralShouldReceiveTraffic: true
        eastReplicas: 1
        eastShouldReceiveTraffic: true
    - name: Test removal of one secondary
      uses: ./.github/actions/failover-test
      with:
        westReplicas: 0
        westShouldReceiveTraffic: false
        centralReplicas: 0
        centralShouldReceiveTraffic: false
        eastReplicas: 1
        eastShouldReceiveTraffic: true
    - name: Test reestablishment of primary
      uses: ./.github/actions/failover-test
      with:
        westReplicas: 1
        westShouldReceiveTraffic: true
        centralReplicas: 0
        centralShouldReceiveTraffic: false
        eastReplicas: 1
        eastShouldReceiveTraffic: false
