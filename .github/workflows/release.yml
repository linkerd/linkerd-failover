name: Release

# TODO(ver) This workflow can ONLY be exercised in the course of publishing a
# release. This should be changed to exercise the release workflow without
# publishing artifacts.
#
# TODO(ver) Change the versioning scheme so that released versions
# match the software version of the CLI and controller.
#
# TODO(ver) Publish CLI binaries for other platforms (at least macOS).

on:
  push:
    tags:
    - "[0-9]+.[0-9]+.[0-9]+*"

permissions:
  contents: read

jobs:
  docker-build:
    runs-on: ubuntu-20.04
    container: ghcr.io/linkerd/dev:v33-tools
    timeout-minutes: 10
    steps:
    - run: apt update && apt install -y docker.io
    - uses: docker/setup-qemu-action@27d0a4f181a40b142cce983c5393082c365d1480
    - uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325
    - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
    - uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7
      with:
        path: /home/runner/buildx-cache
        key: ${{ runner.os }}-buildx-failover
    - run: just controller-build-image --platform 'linux/amd64,linux/arm64,linux/arm/v7'
    - uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
      with:
        registry: ghcr.io
        username: ${{ secrets.DOCKER_GHCR_USERNAME }}
        password: ${{ secrets.DOCKER_GHCR_PAT }}
    - run: just controller-build-image --platform 'linux/amd64,linux/arm64,linux/arm/v7' --output type=registry --tag 'ghcr.io/linkerd/failover:${{ github.ref_name }}'
    - run: action-docker-prune /home/runner/buildx-cache

  integration-tests:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    needs: [docker-build]
    steps:
    - name: Checkout code
      uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
    - name: Set up Helm
      uses: azure/setup-helm@f382f75448129b3be48f8121b9857be18d815a82
    - name: Create cluster
      uses: AbsaOSS/k3d-action@b176c2a6dcae72e3e64e3e4d61751904ec314002
      with:
        cluster-name: default
    - name: Install linkerd
      run: |
        curl -sL https://run.linkerd.io/install | sh
        export PATH=$PATH:~/.linkerd2/bin
        linkerd install --crds | kubectl apply -f -
        linkerd install | kubectl apply -f -
        linkerd check
    - name: Install linkerd-smi
      run: |
        helm repo add linkerd-smi https://linkerd.github.io/linkerd-smi
        helm repo up
        helm install linkerd-smi -n linkerd-smi --create-namespace --wait linkerd-smi/linkerd-smi
    - name: Install linkerd-failover
      run: |
        helm install linkerd-failover -n linkerd-failover --create-namespace --wait \
          --set image.registry=ghcr.io/linkerd \
          --set image.tag=${{ github.ref_name }} \
          charts/linkerd-failover
    - name: Test routing to primary
      uses: ./.github/actions/failover-test
      with:
        westReplicas: 1
        westShouldReceiveTraffic: true
        centralReplicas: 1
        centralShouldReceiveTraffic: false
        eastReplicas: 1
        eastShouldReceiveTraffic: false
    - name: Test failover to secondaries
      uses: ./.github/actions/failover-test
      with:
        westReplicas: 0
        westShouldReceiveTraffic: false
        centralReplicas: 1
        centralShouldReceiveTraffic: true
        eastReplicas: 1
        eastShouldReceiveTraffic: true
    - name: Test removal of one secondary
      uses: ./.github/actions/failover-test
      with:
        westReplicas: 0
        westShouldReceiveTraffic: false
        centralReplicas: 0
        centralShouldReceiveTraffic: false
        eastReplicas: 1
        eastShouldReceiveTraffic: true
    - name: Test reestablishment of primary
      uses: ./.github/actions/failover-test
      with:
        westReplicas: 1
        westShouldReceiveTraffic: true
        centralReplicas: 0
        centralShouldReceiveTraffic: false
        eastReplicas: 1
        eastShouldReceiveTraffic: false

  gh-release:
    name: Create GH release
    timeout-minutes: 10
    runs-on: ubuntu-20.04
    needs: [integration-tests]
    permissions:
      contents: write
    container: ghcr.io/linkerd/dev:v33-rust
    steps:
    - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
    - run: just fetch
    # TODO support alternate targets
    - run: just profile=release static=true target=x86_64-unknown-linux-musl cli-build
    - run: mv "$(just --evaluate profile=release target=x86_64-unknown-linux-musl cli-bin)" linkerd-failover-linux-amd64
    - uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5
      with:
        draft: false
        prerelease: false
        generate_release_notes: true
        files: ./linkerd-failover-linux-amd64

  chart-deploy:
    name: Helm chart deploy
    timeout-minutes: 10
    runs-on: ubuntu-20.04
    needs: [gh-release]
    steps:
    - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
    - uses: azure/setup-helm@f382f75448129b3be48f8121b9857be18d815a82
    - uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d
      with:
        credentials_json: ${{ secrets.LINKERD_SITE_TOKEN }}
    - uses: google-github-actions/setup-gcloud@75fd574e9690e7c4a4681d1255d1c341cf0d9a8c
    - name: Edge Helm chart creation and upload
      if: contains(github.ref, '-edge')
      run: |
        mkdir -p target/helm
        helm --app-version "${{ github.ref_name }}" -d target/helm package charts/linkerd-failover
        # backup index file before changing it
        gsutil cp gs://helm.linkerd.io/edge/index.yaml "target/helm/index-pre-failover-${{ github.ref_name }}".yaml
        helm repo index --url https://helm.linkerd.io/edge/ --merge "target/helm/index-pre-failover-${{ github.ref_name }}".yaml target/helm
        gsutil rsync target/helm gs://helm.linkerd.io/edge
    - name: Stable Helm chart creation and upload
      if: ${{ !contains(github.ref, '-edge') }}
      run: |
        mkdir -p target/helm
        helm --app-version "${{ github.ref_name }}" -d target/helm package charts/linkerd-failover
        # backup index file before changing it
        gsutil cp gs://helm.linkerd.io/stable/index.yaml "target/helm/index-pre-failover-${{ github.ref_name }}".yaml
        helm repo index --url https://helm.linkerd.io/stable/ --merge "target/helm/index-pre-failover-${{ github.ref_name }}".yaml target/helm
        gsutil rsync target/helm gs://helm.linkerd.io/stable
