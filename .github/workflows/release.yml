name: Release

# TODO(ver) This workflow can ONLY be exercised in the course of publishing a
# release. This should be changed to exercise the release workflow without
# publishing artifacts.
#
# TODO(ver) Change the versioning scheme so that released versions
# match the software version of the CLI and controller.
#
# TODO(ver) Publish CLI binaries for other platforms (at least macOS).

on:
  push:
    tags:
    - "[0-9]+.[0-9]+.[0-9]+*"

permissions:
  contents: read

jobs:
  docker-build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - uses: linkerd/dev/actions/setup-tools@v44
    - uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
    - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
      with:
        path: target/buildx
        key: buildx-${{ runner.os }}-${{ github.sha }}
        restore-keys: buildx-${{ runner.os }}-
    - run: just controller-build-image
        --platform linux/amd64,linux/arm64,linux/arm/v7
        --cache-from type=local,src=target/buildx
        --cache-to type=local,dest=target/buildx
    - run: just-dev prune-action-cache target/buildx
    - uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
      with:
        registry: ghcr.io
        username: ${{ secrets.DOCKER_GHCR_USERNAME }}
        password: ${{ secrets.DOCKER_GHCR_PAT }}
    - run: just controller-build-image
        --platform linux/amd64,linux/arm64,linux/arm/v7
        --cache-from 'type=local,src=target/buildx'
        --tag 'ghcr.io/linkerd/failover:${{ github.ref_name }}'
        --output type=registry

  integration-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [docker-build]
    steps:
    - uses: linkerd/dev/actions/setup-tools@v44
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
    - run: just-k3d create use
    - name: Install linkerd
      run: |
        curl -sL https://run.linkerd.io/install | sh
        export PATH=$PATH:~/.linkerd2/bin
        linkerd install --crds | kubectl apply -f -
        linkerd install --set proxy.enableShutdownEndpoint=true | kubectl apply -f -
        linkerd check
    - name: Install linkerd-smi
      run: |
        helm repo add linkerd-smi https://linkerd.github.io/linkerd-smi
        helm repo up
        helm install linkerd-smi -n linkerd-smi --create-namespace --wait linkerd-smi/linkerd-smi
    - name: Install linkerd-failover
      run: |
        helm install linkerd-failover -n linkerd-failover --create-namespace --wait \
          --set image.registry=ghcr.io/linkerd \
          --set image.tag=${{ github.ref_name }} \
          charts/linkerd-failover
    - name: Test routing to primary
      uses: ./.github/actions/failover-test
      with:
        westReplicas: 1
        westShouldReceiveTraffic: true
        centralReplicas: 1
        centralShouldReceiveTraffic: false
        eastReplicas: 1
        eastShouldReceiveTraffic: false
    - name: Test failover to secondaries
      uses: ./.github/actions/failover-test
      with:
        westReplicas: 0
        westShouldReceiveTraffic: false
        centralReplicas: 1
        centralShouldReceiveTraffic: true
        eastReplicas: 1
        eastShouldReceiveTraffic: true
    - name: Test removal of one secondary
      uses: ./.github/actions/failover-test
      with:
        westReplicas: 0
        westShouldReceiveTraffic: false
        centralReplicas: 0
        centralShouldReceiveTraffic: false
        eastReplicas: 1
        eastShouldReceiveTraffic: true
    - name: Test reestablishment of primary
      uses: ./.github/actions/failover-test
      with:
        westReplicas: 1
        westShouldReceiveTraffic: true
        centralReplicas: 0
        centralShouldReceiveTraffic: false
        eastReplicas: 1
        eastShouldReceiveTraffic: false

  gh-release:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: [integration-tests]
    permissions:
      contents: write
    container: ghcr.io/linkerd/dev:v44-rust-musl
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
    - run: just fetch
    # TODO support alternate targets
    - run: just profile=release static=true target=x86_64-unknown-linux-musl cli-build
    - run: mv "$(just --evaluate profile=release target=x86_64-unknown-linux-musl cli-bin)" linkerd-failover-linux-amd64
    - uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda
      with:
        draft: false
        prerelease: false
        generate_release_notes: true
        files: ./linkerd-failover-linux-amd64

  chart-deploy:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: [gh-release]
    steps:
    - uses: google-github-actions/auth@6fc4af4b145ae7821d527454aa9bd537d1f2dc5f
      with:
        credentials_json: ${{ secrets.LINKERD_SITE_TOKEN }}
    - uses: google-github-actions/setup-gcloud@77e7a554d41e2ee56fc945c52dfd3f33d12def9a
    - uses: linkerd/dev/actions/setup-tools@v44
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
    - name: Publish edge helm chart
      if: contains(github.ref, '-edge')
      run: |
        mkdir -p target/helm
        helm --app-version "${{ github.ref_name }}" -d target/helm package charts/linkerd-failover
        # backup index file before changing it
        gsutil cp gs://helm.linkerd.io/edge/index.yaml "target/helm/index-pre-failover-${{ github.ref_name }}".yaml
        helm repo index --url https://helm.linkerd.io/edge/ --merge "target/helm/index-pre-failover-${{ github.ref_name }}".yaml target/helm
        gsutil rsync target/helm gs://helm.linkerd.io/edge
    - name: Publish stable helm chart
      if: ${{ !contains(github.ref, '-edge') }}
      run: |
        mkdir -p target/helm
        helm --app-version "${{ github.ref_name }}" -d target/helm package charts/linkerd-failover
        # backup index file before changing it
        gsutil cp gs://helm.linkerd.io/stable/index.yaml "target/helm/index-pre-failover-${{ github.ref_name }}".yaml
        helm repo index --url https://helm.linkerd.io/stable/ --merge "target/helm/index-pre-failover-${{ github.ref_name }}".yaml target/helm
        gsutil rsync target/helm gs://helm.linkerd.io/stable
